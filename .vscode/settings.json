// Place your settings in this file to overwrite default and user settings.
{
	// Controls the rendering size of tabs in characters. Accepted values: "auto", 2, 4, 6, etc. If set to "auto", the value will be guessed when a file is opened.
	"editor.tabSize": 2,

	// Controls if the editor will insert spaces for tabs. Accepted values:  "auto", true, false. If set to "auto", the value will be guessed when a file is opened.
	"editor.insertSpaces": true,

	// Controls whether the editor should render whitespace characters
	"editor.renderWhitespace": true,

	//-------- Files configuration --------

	// Configure glob patterns for excluding files and folders.
	"files.exclude": {
		"**/.git": true,
		"**/.DS_Store": true
	},

	// When enabled, will trim trailing whitespace when you save a file.
	"files.trimTrailingWhitespace": true,

//-------- Search configuration --------

	// Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the file.exclude setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true
	},


 	//-------- JavaScript configuration --------

	// Controls how JavaScript IntelliSense works.

	// Always include all words from the current document.
	"javascript.suggest.alwaysAllWords": false,

	// Complete functions with their parameter signature.
	"javascript.suggest.useCodeSnippetsOnMethodSuggest": false,

	// Controls how JavaScript validation works.

	// Controls VSCode's Javascript validation. If set to false both syntax and sematic validation is disabled
	"javascript.validate.enable": true,

	// Run linter checks for JavaScript files - overrides validate.lint.* settings.
	"javascript.validate.semanticValidation": true,

	// Check JavaScript files for syntax errors.
	"javascript.validate.syntaxValidation": true,

	// Controls various aspects of validation.

	// Don't spare curly brackets.
	"javascript.validate.lint.curlyBracketsMustNotBeOmitted": "error",

	// Empty block should have a comment.
	"javascript.validate.lint.emptyBlocksWithoutComment": "warning",

	// Use '!==' and '===' instead of '!=' and '=='.
	"javascript.validate.lint.comparisonOperatorsNotStrict": "error",

	// Missing semicolon.
	"javascript.validate.lint.missingSemicolon": "error",

	// Unexpected output of the 'typeof'-operator.
	"javascript.validate.lint.unknownTypeOfResults": "error",

	// Semicolon instead of block.
	"javascript.validate.lint.semicolonsInsteadOfBlocks": "warning",

	// Function inside loop.
	"javascript.validate.lint.functionsInsideLoops": "ignore",

	// Function with lowercase name used as constructor.
	"javascript.validate.lint.newOnLowercaseFunctions": "warning",

	// Looks for mistyped triple-slash references.
	"javascript.validate.lint.tripleSlashReferenceAlike": "warning",

	// Unused local variable.
	"javascript.validate.lint.unusedVariables": "error",

	// Unused local function.
	"javascript.validate.lint.unusedFunctions": "error",

	// Parameter don't match a function signature
	"javascript.validate.lint.parametersDontMatchSignature": "warning",

	// Don't re-declare a variable and change its type.
	"javascript.validate.lint.redeclaredVariables": "error",

	// Don't use an undeclared variable.
	"javascript.validate.lint.undeclaredVariables": "error",

	// Don't use an unknown property.
	"javascript.validate.lint.unknownProperty": "warning",

	// Don't require an unknown module.
	"javascript.validate.lint.unknownModule": "warning",

	// Don't re-declare a variable type by an assignment.
	"javascript.validate.lint.forcedTypeConversion": "warning",

	// Only use numbers for arthimetic operations.
	"javascript.validate.lint.mixedTypesArithmetics": "warning",

	// Don't use instanceof with primitive types.
	"javascript.validate.lint.primitivesInInstanceOf": "error",

	// Function with return-statement used as constructor.
	"javascript.validate.lint.newOnReturningFunctions": "warning"

}